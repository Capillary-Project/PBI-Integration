table New_Table
	lineageTag: e6cc280c-6ec4-4e1d-8cac-706e02a52386

	measure 'web active users' = ```
			[total active users] - [app active users]
			// VAR wau = 
			//     CALCULATE(
			//         DISTINCTCOUNT('customer_contact_info_marketing'[user_id]),
			//         USERELATIONSHIP(customer_contact_info_marketing[user_id], member_last_activity_bi[user_id]),
			//         USERELATIONSHIP(date_table[date], customer_contact_info_marketing[date]),
			//         FILTER(
			//             member_last_activity_bi, 
			//             member_last_activity_bi[platform] = "web"
			//         )
			//         // You can uncomment below if you want to filter by action in the future
			//         // FILTER(tracking_action_events, tracking_action_events[action] = "logged in")
			//     )
			// var totalusers = CALCULATE(DISTINCTCOUNT(member_last_activity_bi[user_id]),member_last_activity_bi[platform] = "web",USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date]))
			// RETURN
			// IF(ISBLANK(totalusers), 0, totalusers)
			
			// VAR WebUsers = 
			//     CALCULATETABLE(
			//         VALUES(member_last_activity_bi[user_id]),
			//         member_last_activity_bi[platform] = "web",
			//         USERELATIONSHIP(date_table[date], member_last_activity_bi[last_session_date]))
			// VAR AppUsers = 
			//     CALCULATETABLE(
			//         VALUES(member_last_activity_bi[user_id]),
			//         member_last_activity_bi[platform] = "app",
			//         USERELATIONSHIP(date_table[date], member_last_activity_bi[last_session_date]))
			// VAR WebOnlyUsers = 
			//     EXCEPT(WebUsers, AppUsers) 
			
			// RETURN 
			//    IF(ISBLANK(COUNTROWS(WebOnlyUsers)),0,(COUNTROWS(WebOnlyUsers)))
			
			
			```
		formatString: #,0
		lineageTag: ac2e5285-2549-486f-9635-3fc5c65ce326

	measure %unsubscribe = ```
			
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]),
			customer_contact_info_marketing[channel] <> "DM",
			ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			customer_contact_info_marketing[campaign_legend_lebel] = "Marked Unsubscribe")
			
			var c = DIVIDE(a,[email delivered], 0)
			
			RETURN 
			IF(ISBLANK(c),0,c)
			```
		formatString: 0%;-0%;0%
		lineageTag: 7ec11e5c-cb3c-4265-9a29-d3103f3a9629

	measure 'unique members touched' =
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), ALLEXCEPT(member_dimension, member_dimension[client_id_name]))
			// USERELATIONSHIP(date_table[date],customer_contact_info_marketing[date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: f8beaa9e-02ac-4a1a-b0a4-31a838836cd0

	measure 'unique members eligible for rally engage' = ```
			
			//  CALCULATE(DISTINCTCOUNT('member_dimension'[user_id]))
			
			VAR SelectedDate = CALCULATE(
			    MAX('date_table'[date]), 
			    VALUES('date_table')
			) -- Get the selected end date from the slicer
			
			-- Create the 'a' variable (similar to previous measures)
			VAR a = SELECTCOLUMNS(ADDCOLUMNS(
			    SUMMARIZE(
			        member_dimension,
			        member_dimension[user_id],
			        "Max_Start_Date",
			        MAX(member_dimension[start_date])
			    ),
			    "Eligible_concat",
			    member_dimension[user_id] & "-" & [Max_Start_Date]
			), [Eligible_concat])
			
			-- The 'reduction' variable to filter based on the join date and concatenated fields
			VAR reduction =
			    FILTER(
			        member_dimension,
			        member_dimension[Concated_fiels] IN a &&  -- Filter based on the concatenated fields
			        member_dimension[start_date] <= SelectedDate  -- Filter join date up to the selected date
			    )
			
			-- Calculating the distinct count of eligible users
			VAR Result = 
			    CALCULATE(
			        DISTINCTCOUNT('member_dimension'[user_id]),
			        member_dimension[start_date]<=SelectedDate, -- Apply the reduction filters
			        ALL(date_table[date])  -- Ignore any pre-existing date filters
			    )
			
			-- Return the final result, returning 0 if no result is found
			RETURN
			IF(ISBLANK(Result), 0, Result)
			```
		formatString: #,0
		lineageTag: 1b271f08-9c20-4a5c-8620-c50b0202aa86

	measure 'unique gender by age' = ```
			
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			    
			VAR new =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			    
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[Concated_fiels] IN new)
			    )
			VAR count_user = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			VAR b = CALCULATE(
			    DISTINCTCOUNT(customer_contact_info_marketing[user_id]),
			    REMOVEFILTERS(member_dimension[gender]),REMOVEFILTERS(member_dimension[age range]),member_dimension[age range]<> "Unknown",member_dimension[age range]<> BLANK(),member_dimension[gender] <> BLANK())
			var d =
			DIVIDE(count_user, b)
			RETURN
			IF(ISBLANK(d),0,d)
			
			```
		formatString: #,0%;-#,0%;#,0%
		lineageTag: 1d7ac24e-be0d-49c4-8a8b-9d70bbc983b3

	measure 'total active users' =
			
			// VAR totalusers = CALCULATE(DISTINCTCOUNT('customer_contact_info_marketing'[user_id]), USERELATIONSHIP(date_table[date],customer_contact_info_marketing[date]),USERELATIONSHIP(customer_contact_info_marketing[user_id],member_last_activity_bi[user_id]))
			
			var totalusers = CALCULATE(DISTINCTCOUNT(member_last_activity_bi[user_id]),USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date]))
			RETURN
			IF(ISBLANK(totalusers), 0, totalusers)
		formatString: #,0
		lineageTag: f414d419-ea69-4bec-b428-f4c85ce5a8d6

	measure 'total earnings' =
			
			var a =CALCULATE(SUM('incentive_earning_detail'[amount_earned]),'incentive_earning_detail'[reward_category]<>"Bonus")
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: 0
		lineageTag: 822b04ad-c903-4c94-9af2-d43dc3e3d7f1

	measure 'successful logins' = ```
			
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR max_date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			   
			VAR b =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= max_date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			   
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[Concated_fiels] IN b))
			var a = CALCULATE(
			        DISTINCTCOUNT('customer_contact_info_marketing'[user_id]),  
			        'member_dimension'[terms_and_conditions_acceptance_date]<= max_date_,'member_dimension'[terms_and_conditions_acceptance_date]<>BLANK(), USERELATIONSHIP(date_table[date],customer_contact_info_marketing[date]))
			    
			RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: 74e3231a-ea50-403f-8715-3c2825c5275b

	measure 'stride completed program' = ```
			
			 var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[activity_type] = "rewardableStride",USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			 RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: c8a194ec-5182-4955-8b72-bbe697f4492f

	measure Start_date = ```
			
			var a = CALCULATE(MIN('date_table'[date]),VALUES('date_table'))
			RETURN
			"Start Date: " & FORMAT( a, "MM/DD/YYYY" ) 
			```
		lineageTag: bed833b6-5be7-4ea2-b85f-ce0eedbef91f

	measure 'sp successful' = ```
			
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR max_date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			   
			VAR b =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= max_date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			   
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[relationship_code] = "Spouse" || member_dimension[relationship_code] = "SP") && (member_dimension[Concated_fiels] IN b))
			 
			var a = CALCULATE(DISTINCTCOUNT('customer_contact_info_marketing'[user_id]),  ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			                                member_dimension[relationship_code] = "Spouse",
			                                'member_dimension'[terms_and_conditions_acceptance_date]<= max_date_,
			                                 'member_dimension'[terms_and_conditions_acceptance_date]<>BLANK(), 
			                                 USERELATIONSHIP(date_table[date],customer_contact_info_marketing[date]))
			 
			Return
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: f9a433aa-59e5-4f5a-aa49-4c43da4b08d7

	measure 'sp active user' = ```
			
			// VAR min_date_ =
			//     CALCULATE(
			//         MIN('date_table'[date]),
			//         VALUES('date_table')
			//     )
			// VAR date_ =
			//     CALCULATE(
			//         MAX('date_table'[date]),
			//         VALUES('date_table')
			//     )
			    
			// VAR b =
			//     SELECTCOLUMNS(
			//         ADDCOLUMNS(
			//             SUMMARIZE(
			//                 FILTER(
			//                     member_dimension,
			//                     member_dimension[start_date] >= min_date_ &&
			//                     member_dimension[start_date] <= date_
			//                 ),
			//                 member_dimension[user_id],
			//                 "Max_Start_Date", MAX(member_dimension[start_date])
			//             ),
			//             "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			//         ),
			//         [Emp_concat]
			//     )
			    
			// VAR reduction =
			//     FILTER(
			//         member_dimension,
			//         (member_dimension[relationship_code] = "Spouse" ||
			//          member_dimension[relationship_code] = "SP")
			//          && (member_dimension[Concated_fiels] IN b)
			//     )
			
			VAR Result = 
			CALCULATE(DISTINCTCOUNT('member_last_activity_bi'[user_id]),Latest_Relationship_Per_User[RelationshipCode]= "Spouse")
			
			-- Return the final result, returning 0 if no result is found
			RETURN
			IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: cddb053f-b254-4414-822a-157f974afff5

	measure 'redeeming points' =
			
			// var a = CALCULATE(DISTINCTCOUNT(gift_card_redemption[user_id]))
			var a = CALCULATE(DISTINCTCOUNT(points_redemptions[user_id]),USERELATIONSHIP(date_table[date],points_redemptions[redemption_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: c4e532ef-36d2-4814-818b-007ccbf57146

	measure 'redeeming gift cards' =
			
			var a =CALCULATE(DISTINCTCOUNT(gift_card_redemption[user_id]), USERELATIONSHIP(date_table[date], gift_card_redemption[reward_issue_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 8e219c79-64cd-40f9-89f5-87713472e29d

	measure 'non active users' = ```
			
			// var total = 
			//     CALCULATE(DISTINCTCOUNT('customer_contact_info_marketing'[user_id]))
			
			// var active = 
			//     CALCULATE(DISTINCTCOUNT('member_last_activity_bi'[user_id]),USERELATIONSHIP(date_table[date], member_last_activity_bi[last_session_date]))
			
			// VAR nonactive = total - active
			
			// RETURN
			// nonactive
			
			var total =
			    CALCULATE(DISTINCTCOUNT('customer_contact_info_marketing'[user_id]),ALLEXCEPT(member_dimension,member_dimension[client_id_name]))
			 
			var active =
			    CALCULATE(DISTINCTCOUNT('member_last_activity_bi'[user_id]),USERELATIONSHIP(date_table[date], member_last_activity_bi[last_session_date]),ALLEXCEPT(member_dimension,member_dimension[client_id_name]))
			 
			VAR nonactive = total - active
			 
			RETURN
			nonactive
			 
			```
		formatString: #,0
		lineageTag: 82a24c2f-2b78-48c4-aad4-cc1eecbeb68d

	measure 'New EligibleUsers' = ```
			
			VAR SelectedDate = CALCULATE(
			    MAX('date_table'[date]), 
			    VALUES('date_table')
			) -- Get the selected end date from the slicer
			
			-- Create the 'a' variable (similar to previous measures)
			VAR a = SELECTCOLUMNS(ADDCOLUMNS(
			    SUMMARIZE(
			        member_dimension,
			        member_dimension[user_id],
			        "Max_Start_Date",
			        MAX(member_dimension[start_date])
			    ),
			    "Eligible_concat",
			    member_dimension[user_id] & "-" & [Max_Start_Date]
			), [Eligible_concat])
			
			-- The 'reduction' variable to filter based on the join date and concatenated fields
			VAR reduction =
			    FILTER(
			        member_dimension,
			        member_dimension[Concated_fiels] IN a &&  -- Filter based on the concatenated fields
			        member_dimension[start_date] <= SelectedDate  -- Filter join date up to the selected date
			    )
			
			-- Calculating the distinct count of eligible users
			VAR Result = 
			    CALCULATE(
			        DISTINCTCOUNT('member_dimension'[user_id])
			        // reduction,  -- Apply the reduction filters
			        // ALL(date_table[date])  -- Ignore any pre-existing date filters
			    )
			
			-- Return the final result, returning 0 if no result is found
			RETURN
			IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 651a28a6-4807-4eee-acb9-4bed4dbcca8c

	measure 'mission joins' =
			
			var a = CALCULATE(DISTINCTCOUNT('mission_members_fact'[user_id]),USERELATIONSHIP(date_table[date],mission_members_fact[mission_start_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 65ebf91f-2bff-4aa0-abe5-386e9ff75bc3

	measure 'mission completed' =
			
			var a = CALCULATE(DISTINCTCOUNT(mission_members_fact[user_id]), USERELATIONSHIP(date_table[date],mission_members_fact[mission_completion_date]),mission_members_fact[mission_complete] = "1")
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 3f2c0eb3-9a96-4c0e-9da9-836a123ffc23

	measure 'member attestation completion' =
			
			VAR a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[activity_type] = "rewardableAttestationActivity",USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a), 0, a)
		formatString: #,0
		lineageTag: 6df2c246-6039-4881-9757-78551a3457fa

	measure 'maximum allowed' =
			
			var a =CALCULATE(SUM('incentive_plan_config'[max_cap]), USERELATIONSHIP(date_table[date], incentive_plan_config[last_updated_date]),USERELATIONSHIP(member_dimension[client_name],'incentive_plan_config'[client_name]))
			var b = CALCULATE(SUM(incentive_earning_detail[MaxCap]),USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(b),0,b)
			// b
		formatString: #,0
		lineageTag: 9573bedc-1a9e-41ad-b7ae-df45e2b09bf8

	measure 'incentives earned' =
			
			var a =CALCULATE(SUM('incentive_earning_detail'[amount_earned]),USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]),incentive_earning_detail[reward_category]="Core")
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 2c3de607-6ddd-4ffa-9c6c-3a7033b847de

	measure 'health survey completions' =
			
			VAR a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[activity_type] = "rewardableHealthSurvey",USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a), 0, a)
		formatString: #,0
		lineageTag: ec2b67b3-d54a-4c91-86a2-542ef87abf3a

	measure 'gymcheckin completed program' = ```
			
			 var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[activity_type] = "rewardableGymCheckin",USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			 RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: db3eee15-65d4-4e9b-8b00-fdf06fdbfa15

	measure gauge = ```
			[A] * [B]
			
			```
		lineageTag: a2121188-bf61-4a53-9d8f-e1da44875818

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure End_date = ```
			
			var a = CALCULATE(MAX('date_table'[date]),VALUES('date_table'))
			RETURN
			"End Date: " & FORMAT( a, "MM/DD/YYYY" ) 
			```
		lineageTag: df85775d-c917-4024-8cba-e81d80ace703

	measure 'emp successful' = ```
			
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR max_date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			   
			VAR b =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= max_date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			   
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[relationship_code] = "Employee" || member_dimension[relationship_code] = "EE") && (member_dimension[Concated_fiels] IN b))
			 
			var a =   CALCULATE(DISTINCTCOUNT('customer_contact_info_marketing'[user_id]), ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			                            member_dimension[relationship_code] = "Employee",
			                                 'member_dimension'[terms_and_conditions_acceptance_date]<= max_date_,
			                                     'member_dimension'[terms_and_conditions_acceptance_date]<>BLANK(),
			                                         USERELATIONSHIP(date_table[date],
			                                             customer_contact_info_marketing[date]))
			 
			Return
			if(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: 8c51676e-bfa7-43a2-b9e1-79111459d7ad

	measure 'emp provided reward points' =
			
			var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[currency] = "EMPLOYER_POINTS", USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: e35a198a-bece-43e6-bfcd-edd46e92b7f3

	measure 'emp active user' = ```
			
			// VAR min_date_ =
			//     CALCULATE(
			//         MIN('date_table'[date]),
			//         VALUES('date_table')
			//     )
			// VAR date_ =
			//     CALCULATE(
			//         MAX('date_table'[date]),
			//         VALUES('date_table')
			//     )
			    
			// VAR b =
			//     SELECTCOLUMNS(
			//         ADDCOLUMNS(
			//             SUMMARIZE(
			//                 FILTER(
			//                     member_dimension,
			//                     member_dimension[start_date] >= min_date_ &&
			//                     member_dimension[start_date] <= date_
			//                 ),
			//                 member_dimension[user_id],
			//                 "Max_Start_Date", MAX(member_dimension[start_date])
			//             ),
			//             "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			//         ),
			//         [Emp_concat]
			//     )
			    
			// VAR reduction =
			//     FILTER(
			//         member_dimension,
			//         (member_dimension[relationship_code] = "Employee" ||
			//          member_dimension[relationship_code] = "EE")
			//          && (member_dimension[Concated_fiels] IN b)
			//     )
			
			
			VAR Result =
			    CALCULATE(
			        DISTINCTCOUNT('member_last_activity_bi'[user_id]),Latest_Relationship_Per_User[RelationshipCode]= "Employee")
			
			-- Step 4: Return the result, ensuring 0 is returned if the result is blank
			RETURN
			IF(ISBLANK(Result), 0, Result)
			```
		formatString: 0
		lineageTag: 5ba72428-a026-448c-8cac-ec9626f47b1d

	measure 'email volume trends' = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), ALLEXCEPT(member_dimension, member_dimension[client_id_name]))
		formatString: 0
		lineageTag: a9ea8eff-4d8b-4505-8c59-179e1308c6b0

	measure 'email sent' = ```
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			customer_contact_info_marketing[channel] <> "DM",
			customer_contact_info_marketing[campaign_legend_lebel] IN {"Delivered","Marked Unsubscribe","Sent","Opened","Clicked"}) 
			
			RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: 150d2e9a-6bec-48d2-8751-e53835a4fcc4

	measure 'email opened' = ```
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), customer_contact_info_marketing[channel] <> "DM", 
			ALLEXCEPT(member_dimension, member_dimension[client_id_name]), 
			customer_contact_info_marketing[campaign_legend_lebel] IN {"Opened","Clicked","Marked Unsubscribe"} )
			RETURN
			IF(ISBLANK(a), 0, a)
			```
		formatString: #,0
		lineageTag: 3f60da3e-e7ad-4260-9b80-9dd30ebe2089

	measure 'email delivered' = ```
			
			var a =CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), customer_contact_info_marketing[channel] <> "DM",
			ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			customer_contact_info_marketing[campaign_legend_lebel] IN {"Delivered","Marked Unsubscribe","Opened","Clicked"}) 
			RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: a600fa10-cff2-4bfb-977f-8b6d7764441a

	measure 'email click' =
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), customer_contact_info_marketing[channel] <> "DM",
			ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			customer_contact_info_marketing[campaign_legend_lebel] = "Clicked" || customer_contact_info_marketing[campaign_legend_lebel] = "Marked Unsubscribe")
			RETURN
			IF(ISBLANK(a), 0, a)
		formatString: #,0
		lineageTag: b8b5d5af-746a-4614-b463-32397dcd8be5

	measure 'earning points' =
			
			var a =CALCULATE(DISTINCTCOUNT(points_awarded[user_id]), USERELATIONSHIP(date_table[date], points_awarded[award_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 927e1424-0616-4c12-b60f-bfd35c18bfbd

	measure 'earning HSA_HRA_HIA' =
			
			var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[reward_type] = "HSA" ||  incentive_earning_detail[reward_type] = "HRA" ||  incentive_earning_detail[reward_type] = "HIA", USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 2a5d7e14-0135-4d99-a68f-eca2d23ce31b

	measure Client_name =
			
			var a = "Client Name: " & SELECTEDVALUE('member_dimension'[client_name])
			var b = CALCULATE(
			    MAX('date_table'[date]),
			    VALUES('date_table')
			)
			RETURN
			a
		lineageTag: 0a86e2f7-77e3-495d-8a18-3c88e103bbd9

	measure 'challenge joins' =
			
			var a = CALCULATE(DISTINCTCOUNT(challenge_members_fact[user_id]), USERELATIONSHIP(date_table[date],challenge_members_fact[new_start]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: 17d688cd-b2c0-4567-b623-25312789780d

	measure 'challenge completed' =
			
			var a = CALCULATE(DISTINCTCOUNT(challenge_members_fact[user_id]),challenge_members_fact[milestone_achieved]=1, USERELATIONSHIP(date_table[date],challenge_members_fact[new_start]))
			RETURN
			IF(ISBLANK(a),0,a)
		formatString: #,0
		lineageTag: fdbd0922-0ccd-4450-b8f3-51442fca8a38

	measure Campaign_name =
			
			var a = "Campaign Name: " & SELECTEDVALUE('customer_contact_info_marketing'[campaign_name])
			var b = CALCULATE(
			    MAX('date_table'[date]),
			    VALUES('date_table')
			)
			RETURN
			a
		lineageTag: b957a3f2-d680-42d2-be09-738a0af10add

	measure Brac = "(" & 20 & "%)"
		lineageTag: 6b04ca1e-cfe3-44cf-8d35-df9164ffe988

	measure 'biometric screening' =
			
			var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), SEARCH("BIOSCREEN", incentive_earning_detail[activity_id], 1, 0),USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a), 0, a)
		formatString: #,0
		lineageTag: da69efc6-4cde-4e78-9fa2-7b7b189ccf01

	measure B = 0
		formatString: 0
		lineageTag: ba2cbdca-5134-4254-a059-58b805525a69

	measure 'app downloads' = ```
			
			VAR app = CALCULATE(DISTINCTCOUNT('member_last_activity_bi'[user_id]), 'member_last_activity_bi'[platform] = "app",USERELATIONSHIP(member_last_activity_bi[last_session_date],'date_table'[date]))
			RETURN
			IF(ISBLANK(app),0, app)
			
			// VAR min_date_ =
			//     CALCULATE(
			//         MIN('date_table'[date]),
			//         VALUES('date_table')
			//     )
			// VAR max_date_ =
			//     CALCULATE(
			//         MAX('date_table'[date]),
			//         VALUES('date_table')
			//     )
			   
			// VAR b =
			//     SELECTCOLUMNS(
			//         ADDCOLUMNS(
			//             SUMMARIZE(
			//                 FILTER(
			//                     member_dimension,
			//                     member_dimension[start_date] >= min_date_ &&
			//                     member_dimension[start_date] <= max_date_
			//                 ),
			//                 member_dimension[user_id],
			//                 "Max_Start_Date", MAX(member_dimension[start_date])
			//             ),
			//             "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			//         ),
			//         [Emp_concat]
			//     )
			   
			// VAR reduction =
			//     FILTER(
			//         member_dimension,
			//          (member_dimension[Concated_fiels] IN b))
			 
			// var a =   CALCULATE(DISTINCTCOUNT('member_dimension'[user_id]),reduction,'member_last_activity_bi'[platform]="app",
			//         'member_dimension'[terms_and_conditions_acceptance_date]<= max_date_)
			 
			// Return
			// a
			```
		formatString: #,0
		lineageTag: fb368b22-deae-401e-814b-4c5924801735

	measure 'app active users' = ```
			
			// VAR wau = 
			//     CALCULATE(
			//         DISTINCTCOUNT('customer_contact_info_marketing'[user_id]),
			//         USERELATIONSHIP(customer_contact_info_marketing[user_id], member_last_activity_bi[user_id]),
			//         USERELATIONSHIP(date_table[date], customer_contact_info_marketing[date]),
			//         FILTER(
			//             member_last_activity_bi, 
			//             member_last_activity_bi[platform] = "app"
			//         )
			//         // You can uncomment below if you want to filter by action in the future
			//         // FILTER(tracking_action_events, tracking_action_events[action] = "logged in")
			//     )
			var totalusers = CALCULATE(DISTINCTCOUNT(member_last_activity_bi[user_id]),member_last_activity_bi[platform] = "app", USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date]))
			RETURN
			IF(ISBLANK(totalusers), 0, totalusers)
			
			```
		formatString: #,0
		lineageTag: 4a552227-516a-4d0b-b240-2e66125b1135

	measure 'annual physical' =
			
			var a = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), SEARCH("Annual Physical", incentive_earning_detail[activity_description], 1, 0),USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			RETURN
			IF(ISBLANK(a), 0, a)
		formatString: #,0
		lineageTag: be726a58-6b7a-4bab-a4f4-1fde3d60f852

	measure 'active users' = ```
			
			// VAR ActiveUsers = 
			//     CALCULATE(
			//         DISTINCTCOUNT('member_last_activity_bi'[user_id]), USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date])
			//     )
			// RETURN
			// IF(ISBLANK(ActiveUsers),
			//     0,
			//     ActiveUsers
			// )
			VAR ActiveUsers =
			    CALCULATE(
			        DISTINCTCOUNT('member_last_activity_bi'[user_id]), USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date]),
			        ALLEXCEPT(member_dimension,member_dimension[client_id_name])
			    )
			RETURN
			IF(ISBLANK(ActiveUsers),
			    0,
			    ActiveUsers
			)
			```
		formatString: #,0
		lineageTag: 7227def3-8406-4d3a-95a4-8bddd27be739

	measure A = 0.0
		formatString: 0%;-0%;0%
		lineageTag: acbe11f4-e5e5-4da0-8d7b-78d8843c12cb

	measure '%unique members touched' =
			
			var a = DIVIDE([unique members touched],[unique members eligible for rally engage],0)
			RETURN
			IF(ISBLANK(a),0,a)
		lineageTag: 6fdf4099-771a-4ba9-b8b6-ff1ea219f9a6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%user redeeming gift card' = ```
			
			VAR RedeemingUsers = CALCULATE(DISTINCTCOUNT(gift_card_redemption[user_id]), USERELATIONSHIP(date_table[date], gift_card_redemption[reward_issue_date]))
			
			VAR TotalUsers = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			
			VAR Percentage = DIVIDE(RedeemingUsers, TotalUsers, 0) 
			
			RETURN
			IF(ISBLANK(Percentage),0,Percentage)
			
			```
		lineageTag: 47adf885-5b44-42f3-b17c-07ee23beb08b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%annual physical' = DIVIDE([annual physical], [unique members touched], 0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 065aa95c-82a0-4b91-bfae-87ed12089953

	measure '%biometric screening' = DIVIDE([biometric screening], [unique members touched], 0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: f6934f71-0192-4a66-8464-b2cee5fe9f2e

	measure '%challenge completed' =
			
			var rate = DIVIDE([challenge completed],[unique members touched],0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0%;-0%;0%
		lineageTag: 76e45c16-932c-4f28-9bdc-481971fe0581

	measure '%challenge join' =
			
			var rate = DIVIDE([challenge joins],[unique members touched],0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: ecc7382c-ecff-43c0-9cfb-3714b6517cea

	measure '%earning HSA_HRA_HIA' =
			
			// var users = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[reward_type] = "HSA" ||  incentive_earning_detail[reward_type] = "HRA" ||  incentive_earning_detail[reward_type] = "HIA", USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			// var totalusers = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			
			var c = DIVIDE([earning HSA_HRA_HIA], [unique members touched], 0)
			RETURN
			IF(ISBLANK(c),0,c)
		lineageTag: c0bb152d-5c08-42fa-87db-182fd585f8ab

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%earning points' =
			
			// var totalusers = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			// var earningpoints = CALCULATE(DISTINCTCOUNT(points_awarded[user_id]), USERELATIONSHIP(date_table[date], points_awarded[award_date]))
			var c = DIVIDE([earning points], [unique members touched], 0)
			RETURN
			IF(ISBLANK(c), 0, c)
		lineageTag: cae6a1ab-ac8f-4211-a206-dce140892e0d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%email click' = ```
			
			var c = DIVIDE([email click],[email delivered], 0)
			RETURN 
			IF(ISBLANK(c),0,c)
			```
		lineageTag: a2cba5e9-0b8a-49c7-ab07-fe8078435baa

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%email delivered' = ```
			
			var c = DIVIDE([email delivered],[email sent], 0)
			RETURN 
			IF(ISBLANK(c),0,c)
			```
		lineageTag: 9eec3069-ecfb-4178-9cc9-d6a7a5423b87

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%email opened' = ```
			
			var c = DIVIDE([email opened],[email delivered], 0)
			RETURN 
			IF(ISBLANK(c),0,c)
			```
		lineageTag: 4e28f61c-a6a9-49e8-a2da-f221cea00c24

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%email sent' = ```
			
			
			// var a = [email sent]
			// var b = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			var c = DIVIDE([email sent],[unique members touched], 0)
			RETURN 
			IF(ISBLANK(c),0,c)
			```
		lineageTag: 33e91d82-b2c1-4036-9bed-9aaf90db552c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%emp provided reward points' =
			
			// var empprovidedpoints = CALCULATE(DISTINCTCOUNT(incentive_earning_detail[user_id]), incentive_earning_detail[currency] = "EMPLOYER_POINTS", USERELATIONSHIP(date_table[date],incentive_earning_detail[fulfillment_date]))
			//  var totaluser = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			
			var rate = DIVIDE([emp provided reward points], [unique members touched], 0)
			 RETURN
			 IF(ISBLANK(rate), 0, rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: af05539d-6bda-4cce-8d16-56a5d73acee7

	measure '%gymcheckin completed program' =
			
			var rate = DIVIDE([gymcheckin completed program], [unique members touched], 0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: eb3130f5-3984-47a1-8ba4-9eeba7694248

	measure '%health survey' = DIVIDE([health survey completions], [unique members touched], 0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: b17c6884-e00f-4108-8a6b-f0c41b425700

	measure '%incentives earned' = DIVIDE([incentives earned], [maximum allowed], 0)
		lineageTag: 306a13fa-41e8-4573-979c-94928e598072

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%member attestation' = DIVIDE([member attestation completion], [unique members touched], 0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 5f525a7f-b649-489e-81b1-3b191a2bf89d

	measure '%mission completed' =
			
			var rate = DIVIDE([mission completed],[unique members touched],0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 4a29c23b-0a6e-4580-a766-7af07c10fcd0

	measure '%mission joins' =
			
			var rate = DIVIDE([mission joins], [unique members touched], 0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 95809259-c868-4b3f-b1e0-d0d15b87e5a3

	measure '%redeeming points' = ```
			
			// VAR RedeemingPoints = CALCULATE(DISTINCTCOUNT(points_redemptions[user_id]),USERELATIONSHIP(date_table[date],points_redemptions[redemption_date]))
			// VAR TotalUsers = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]))
			
			VAR Percentage = DIVIDE([redeeming points], [unique members touched], 0) 
			RETURN
			IF(ISBLANK(Percentage),0,Percentage)
			
			```
		lineageTag: b1837ba1-c763-464a-8ad0-e2e63a1327b2

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '%stride completed program' =
			
			var rate = DIVIDE([stride completed program], [unique members touched], 0)
			RETURN
			IF(ISBLANK(rate),0,rate)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 9de0140f-1e9f-4d4d-9fba-fbcca11120d4

	measure DM = ```
			
			var a = CALCULATE(DISTINCTCOUNT(customer_contact_info_marketing[user_id]), ALLEXCEPT(member_dimension, member_dimension[client_id_name]),
			customer_contact_info_marketing[channel] = "DM") 
			RETURN
			IF(ISBLANK(a),0,a)
			```
		formatString: #,0
		lineageTag: eea6196c-c6aa-4e5a-910d-8f6e0b9389c3

	measure 'New Other_Active_users_no' = ```
			
			
			-- Create the 'c' variable (similar to 'a' or 'b' in the other measures)
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			    
			VAR b =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			    
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[relationship_code] = "Spouse" ||
			         member_dimension[relationship_code] = "SP")
			         && (member_dimension[Concated_fiels] IN b)
			    )
			
			-- Calculating the distinct count of users based on the filtered data and the date range from StartYear to SelectedEndDate
			VAR Result = 
			    CALCULATE(
			        DISTINCTCOUNT('member_last_activity_bi'[user_id]),reduction,USERELATIONSHIP(date_table[date], 'member_last_activity_bi'[last_session_date]))
			
			-- Return the final result, returning 0 if no result is found
			RETURN
			IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 9b7c35a5-b737-4f9a-9ac4-cf8302936dcf

	measure 'New Emp_Active_user' = ```
			
			-- Step 1: Create the 'b' variable to store concatenated user_id and Max_Start_Date
			VAR min_date_ =
			    CALCULATE(
			        MIN('date_table'[date]),
			        VALUES('date_table')
			    )
			VAR date_ =
			    CALCULATE(
			        MAX('date_table'[date]),
			        VALUES('date_table')
			    )
			    
			VAR b =
			    SELECTCOLUMNS(
			        ADDCOLUMNS(
			            SUMMARIZE(
			                FILTER(
			                    member_dimension,
			                    member_dimension[start_date] >= min_date_ &&
			                    member_dimension[start_date] <= date_
			                ),
			                member_dimension[user_id],
			                "Max_Start_Date", MAX(member_dimension[start_date])
			            ),
			            "Emp_concat", member_dimension[user_id] & "-" & [Max_Start_Date]
			        ),
			        [Emp_concat]
			    )
			    
			VAR reduction =
			    FILTER(
			        member_dimension,
			        (member_dimension[relationship_code] = "Employee" ||
			         member_dimension[relationship_code] = "EE")
			         && (member_dimension[Concated_fiels] IN b)
			    )
			
			-- Step 3: Calculate the distinct count of user_id based on the filtered data and active relationship with the date table
			VAR Result =
			    CALCULATE(
			        DISTINCTCOUNT('member_last_activity_bi'[user_id]),reduction,USERELATIONSHIP(date_table[date],member_last_activity_bi[last_session_date]))
			
			-- Step 4: Return the result, ensuring 0 is returned if the result is blank
			RETURN
			IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: a62ef8c7-4ff2-4300-857f-f0b568f6cc5e

	measure Active_users_no = ```
			
			// VAR SelectedEndDate = MAX('date_table'[date]) -- Get the selected end date from the slicer
			// VAR StartYear = DATE(YEAR(SelectedEndDate), 1, 1) -- Get the start of the year of the selected end date
			// VAR Result = CALCULATE(
			//     DISTINCTCOUNT('member_last_activity_bi'[user_id]),
			//     // 'tracking_action_events'[action] = "logged in",
			//      'member_last_activity_bi'[last_session_date] >= StartYear , 'member_last_activity_bi'[last_session_date]<= SelectedEndDate, USERELATIONSHIP(date_table[date], 'member_last_activity_bi'[last_session_date]),ALL(date_table[date])
			// )
			// RETURN
			// IF(ISBLANK(Result),0,Result)
			 
			VAR ActiveUsers = 
			    CALCULATE(
			        DISTINCTCOUNT('member_last_activity_bi'[user_id]),  ALLEXCEPT(member_dimension,member_dimension[client_id_name]))
			
			RETURN
			IF(
			    ISBLANK(ActiveUsers),
			    0,
			    ActiveUsers
			)
			```
		formatString: 0
		lineageTag: 1775dfad-7b03-4215-be7f-c975b8eabfba

	measure 'donut website' = [total active users] - [app active users]
		formatString: 0
		lineageTag: 4fc87685-12f2-4e5b-b70b-d8836ed767f8

	measure 'Group type' =
			
			var a = "Group Type: " & SELECTEDVALUE('customer_contact_info_marketing'[group_type])
			var b = CALCULATE(
			    MAX('date_table'[date]),
			    VALUES('date_table')
			)
			RETURN
			a
		lineageTag: e72d96c3-9f03-40c2-820d-dfabd58729ec

	partition New_Table = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

